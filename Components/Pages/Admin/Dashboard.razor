@page "/Admin/Dashboard"
@using TheBloggest.Data.Models
@using TheBloggest.Services
@using BlazorBootstrap
@attribute [Authorize(Roles = "Admin")]

<style>
    .dashboard-container {
        padding: 2rem;
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    .dashboard-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .dashboard-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
    }

    .summary-card {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        border: none;
        overflow: hidden;
    }

        .summary-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0,0,0,0.15);
        }

    .summary-icon {
        width: 60px;
        height: 60px;
        border-radius: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }

    .card-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0.5rem 0;
    }

    .chart-card, .analytics-card {
        background: white;
        border-radius: 1rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: none;
        overflow: hidden;
    }

    .chart-container {
        height: 300px;
        width: 100%;
    }

    .user-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.875rem;
    }

    .activity-bar {
        width: 100%;
        height: 8px;
        background-color: #e9ecef;
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 0.25rem;
    }

    .activity-progress {
        height: 100%;
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        border-radius: 4px;
        transition: width 0.3s ease;
    }

    .btn-modern {
        border-radius: 0.75rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

    @@media (max-width: 768px) {
        .dashboard-container {
            padding: 1rem;
        }

        .dashboard-title {
            font-size: 2rem;
        }

        .card-number {
            font-size: 2rem;
        }

        .summary-icon {
            width: 50px;
            height: 50px;
            font-size: 1.25rem;
        }
    }
</style>

<PageTitle>Dashboard - TheBloggest Admin</PageTitle>

<AuthorizeView Roles="Admin">
    <Authorized>
        <div class="dashboard-container">
            <!-- Header -->
            <div class="dashboard-header mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="dashboard-title mb-1">Dashboard</h1>
                        @* <p class="text-muted mb-0">Welcome back, @context.User.Identity?.Name!</p> *@
                    </div>
                    <div class="d-flex gap-2">
                        <Button Color="ButtonColor.Primary" Size="ButtonSize.Small" class="btn-modern">
                            <i class="bi bi-download"></i> Export
                        </Button>
                        <Button Color="ButtonColor.Secondary" Size="ButtonSize.Small" class="btn-modern">
                            <i class="bi bi-gear"></i> Settings
                        </Button>
                    </div>
                </div>
            </div>

            <!-- Summary Cards -->
            @if (dashboardData != null)
            {
                <div class="row g-4 mb-4">
                    <div class="col-lg-4 col-md-6">
                        <div class="summary-card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="card-title text-muted">Total Posts</h6>
                                        <h2 class="card-number text-primary">@dashboardData.TotalPosts</h2>
                                        <small class="text-success">
                                            <i class="bi bi-arrow-up"></i> +@dashboardData.PostsTrendPercentage% since last month
                                        </small>
                                    </div>
                                    <div class="summary-icon bg-primary">
                                        <i class="bi bi-file-text"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-6">
                        <div class="summary-card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="card-title text-muted">Total Comments</h6>
                                        <h2 class="card-number text-info">@dashboardData.TotalComments</h2>
                                        <small class="text-success">
                                            <i class="bi bi-arrow-up"></i> +@dashboardData.CommentsTrendPercentage% since last month
                                        </small>
                                    </div>
                                    <div class="summary-icon bg-info">
                                        <i class="bi bi-chat-dots"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-6">
                        <div class="summary-card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="card-title text-muted">Total Users</h6>
                                        <h2 class="card-number text-success">@dashboardData.TotalUsers</h2>
                                        <small class="text-success">
                                            <i class="bi bi-arrow-up"></i> +@dashboardData.UsersTrendPercentage% since last month
                                        </small>
                                    </div>
                                    <div class="summary-icon bg-success">
                                        <i class="bi bi-people"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="row g-4 mb-4">
                    <div class="col-lg-8">
                        <div class="chart-card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Posts & Comments Trends</h5>
                                <p class="text-muted mb-0">Activity over the last 12 months</p>
                            </div>
                            <div class="card-body">
                                <canvas id="trendChart" class="chart-container"></canvas>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="chart-card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">User Role Distribution</h5>
                                <p class="text-muted mb-0">Current user roles</p>
                            </div>
                            <div class="card-body">
                                <canvas id="roleChart" class="chart-container"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- User Analytics Section -->
                <div class="row">
                    <div class="col-12">
                        <div class="analytics-card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Most Active Users</h5>
                                <p class="text-muted mb-0">Top contributors this month</p>
                            </div>
                            <div class="card-body p-0">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Username</th>
                                                <th>Role</th>
                                                <th>Posts</th>
                                                <th>Comments</th>
                                                <th>Total Activity</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in dashboardData.TopActiveUsers)
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="d-flex align-items-center">
                                                            <div class="user-avatar me-2">
                                                                @user.Username.Substring(0, 1).ToUpper()
                                                            </div>
                                                            <span class="fw-medium">@user.Username</span>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <span class="badge bg-@(GetRoleColor(user.Role))">@user.Role</span>
                                                    </td>
                                                    <td>
                                                        <span class="fw-medium">@user.PostCount</span>
                                                    </td>
                                                    <td>
                                                        <span class="fw-medium">@user.CommentCount</span>
                                                    </td>
                                                    <td>
                                                        <div class="activity-bar">
                                                            <div class="activity-progress" style="width: @((user.PostCount + user.CommentCount) * 2)%"></div>
                                                        </div>
                                                        <small class="text-muted">@(user.PostCount + user.CommentCount) total</small>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <Spinner Size="SpinnerSize.Large" Color="SpinnerColor.Primary" />
                    <p class="mt-3 text-muted">Loading dashboard data...</p>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="text-center py-5">
            <i class="bi bi-shield-exclamation text-danger" style="font-size: 4rem;"></i>
            <h3 class="mt-3">Access Denied</h3>
            <p class="text-muted">You do not have permission to access this page.</p>
            <Button Color="ButtonColor.Primary" class="btn-modern" href="/">Go Home</Button>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject] private DashboardService DashboardService { get; set; } = default!;
    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    
    private DashboardData? dashboardData;

    protected override async Task OnInitializedAsync()
    {
        dashboardData = await DashboardService.GetDashboardDataAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && dashboardData != null)
        {
            await SetupCharts();
        }
    }

    private async Task SetupCharts()
    {
        if (dashboardData == null) return;

        // Setup trend chart
        var labels = dashboardData.MonthlyPosts.Select(m => m.Month).ToArray();
        var postsData = dashboardData.MonthlyPosts.Select(m => m.Count).ToArray();
        var commentsData = dashboardData.MonthlyComments.Select(m => m.Count).ToArray();

        await JSRuntime.InvokeVoidAsync("setupTrendChart", labels, postsData, commentsData);

        // Setup role chart
        var roleLabels = dashboardData.UserRoleDistribution.Keys.ToArray();
        var roleData = dashboardData.UserRoleDistribution.Values.ToArray();

        await JSRuntime.InvokeVoidAsync("setupRoleChart", roleLabels, roleData);
    }

    private string GetRoleColor(string role) => role.ToLower() switch
    {
        "admin" => "danger",
        "author" => "primary",
        "reader" => "secondary",
        _ => "light"
    };
}
