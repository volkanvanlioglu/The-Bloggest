@page "/Admin/Manage/Categories/Edit/{Id:int}"
@attribute [Authorize(Roles = "Admin")]
@inject ICategoryService CategoryService
@inject NavigationManager Navigation

<h3>Edit Category</h3>

<div class="card">
    <div class="card-body">
        @if (isLoading)
        {
            <div class="text-center py-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Loading category...</p>
            </div>
        }
        else if (category == null)
        {
            <div class="alert alert-danger">Category not found.</div>
        }
        else
        {
            <EditForm Model="category" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <InputText class="form-control" @bind-Value="category.Name" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Description</label>
                    <InputTextArea class="form-control" @bind-Value="category.Description" rows="3" />
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-primary" type="submit" disabled="@isSaving">
                        @if (isSaving)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        }
                        Save
                    </button>
                    <a class="btn btn-secondary" href="/Admin/Manage/Categories/List">Cancel</a>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }

    private Category? category;
    private bool isLoading = true;
    private bool isSaving = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        category = await CategoryService.GetByIdAsync(Id);
        isLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        isSaving = true;
        var result = await CategoryService.UpdateAsync(Id, category!);
        isSaving = false;

        if (result)
        {
            Navigation.NavigateTo("/Admin/Manage/Categories/List");
        }
        else
        {
            // Optionally show an error message
        }
    }
}